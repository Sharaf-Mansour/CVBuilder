 <!-- ADD New Experience-->
 @if (CVModel.CV.WorkExperience is not null)
 {
    <br /> 
    <h4>Your Experience</h4>                   
            <button type="button" class="btn btn-outline-primary" @onclick="()=> CVModel.CV.WorkExperience.Create()">Add Work Experience</button><br>
            @for (int i = 0; i < CVModel.CV.WorkExperience!.Count; i++)
            {
                <br />
                var j = i;
                @if (!CRUD.IsInEditState)
                {
                        @if (!CVModel.CV.WorkExperience[j].InEditState)
                        {
                            <div style="float: left">
                            <button type="button" style="display: block" class="arrow up" @onclick="()=>CVModel.CV.WorkExperience.MoveUp(j) "></button>
                            <button type="button" class="arrow down" @onclick="()=>CVModel.CV.WorkExperience.MoveDown(j) "></button> <br />
                            </div>
                            <div style="margin-left: 55px">
                            <button type="button" class="btn btn-outline-secondary"  @onclick="()=>CVModel.CV.WorkExperience.StartEdit(j) ">Edit </button><br />
                            </div>
                        }
                }
                @if( CVModel.CV.WorkExperience[j].InEditState )
                {
                <button type="button" class="btn btn-outline-dark" @onclick="()=>CVModel.CV.WorkExperience.Cancel()">Cancel</button>
                <button type="button" class="btn btn-outline-success" @onclick="()=>CVModel.CV.WorkExperience.Save()">Save</button>
                <button type="button" class="btn btn-outline-danger" @onclick="()=>CVModel.CV.WorkExperience.Delete()">Delete</button>   
                <div class="labeldata">
                <label>Company Name</label>
                <InputText class="form-control" @bind-Value="CVModel.CV.WorkExperience[j].LocationName "/>
                <ValidationMessage For="@(()=>CVModel.CV.WorkExperience[j].LocationName )" />
                </div>   
                <div class="labeldata">
                <label>Year</label>
                <InputText class="form-control" @bind-Value="CVModel.CV.WorkExperience[j].Year "/>
                <ValidationMessage For="@(()=>CVModel.CV.WorkExperience[j].Year)" />
                </div>
                <div class="labeldata">
                <label>Job Title</label>
                <InputText class="form-control" @bind-Value="CVModel.CV.WorkExperience[j].JobTitle" />
                <ValidationMessage For ="(()=>CVModel.CV.WorkExperience[j].JobTitle)" />
                </div>
                 }
                else
                {
                    <div class="labeldata">
                        <label>Company Name</label>
                        <label class="form-control"> @(CVModel.CV.WorkExperience[j].LocationName ??"Press Edit to enter Company Name") </label>
                        <ValidationMessage For="@(()=>CVModel.CV.WorkExperience[j].LocationName )" />
                    </div>   
                    <div class="labeldata">
                        <label>Year</label>
                        <label class="form-control">@CVModel.CV.WorkExperience[j].Year</label>
                    <ValidationMessage For="@(()=>CVModel.CV.WorkExperience[j].Year)" />
                    </div>
                    <div class="labeldata">
                        <label>Job Title</label>
                        <label class="form-control">@CVModel.CV.WorkExperience[j].JobTitle</label>
                        <ValidationMessage For ="(()=>CVModel.CV.WorkExperience[j].JobTitle)" />
                    </div>                    
                }      
        <br />  
        <button type="button" class="btn btn-outline-primary" @onclick="()=>CVModel.CV.WorkExperience[j].Data.Create()">Add Experience Data</button><br />
        @for (int x = 0; x < CVModel.CV.WorkExperience[j].Data!.Count; x++)
        {   
            <br />
        var y = x;
        @if (!CRUD.IsInEditState)
        {
            @if (!CVModel.CV.WorkExperience[j].Data![y].InEditState)
            {
                <div style="float: left">
                <button type="button"  style="display: block" class="arrow up" @onclick="()=>CVModel.CV.WorkExperience[j].Data.MoveUp(y) "></button>
                    <button type="button" class="arrow down" @onclick="()=>CVModel.CV.WorkExperience[j].Data.MoveDown(y) "> </button>
                </div>
                <div style="margin-left: 55px">
                <button type="button" class="btn btn-outline-secondary" @onclick="()=>CVModel.CV.WorkExperience[j].Data.StartEdit(y) ">Edit </button>
                </div>
            }
        }
        if( CVModel.CV.WorkExperience![j].Data![y].InEditState)
        {
            <button type="button" class="btn btn-outline-dark" @onclick="()=>CVModel.CV.WorkExperience[j].Data.Cancel()">Cancel</button>
            <button type="button" class="btn btn-outline-success" @onclick="()=>CVModel.CV.WorkExperience[j].Data.Save()">Save</button>
            <button type="button" class="btn btn-outline-danger" @onclick="()=>CVModel.CV.WorkExperience[j].Data.Delete()">Delete</button>      
            <div class="labeldata">
                <label>Data</label>
                <InputText class="form-control" id="Data" @bind-Value="CVModel.CV.WorkExperience[j].Data![y].Value" maxlength="100" />
                <label for='@($"Link-{y}")' class="form-check-label" > Set as link</label>
                <InputCheckbox class="form-check-input"  id='@($"Link-{y}")' @bind-Value="CVModel.CV.WorkExperience[j].Data![y].IsLink"/>
                @if (CVModel.CV.WorkExperience[j].Data![y].IsLink)
                    {
                    <br/>
                    <label for='@($"Data-{y}")'>Link</label>
                    <InputText class="form-control" id='@($"Data-{y}")' @bind-Value="CVModel.CV.WorkExperience[j].Data![y].Link"/>
                    <ValidationMessage For="@(()=> CVModel.CV.WorkExperience[j].Data![y].Link)" />
                    }
            </div>
        }
        else
        {
            <div class="labeldata">
                <label>Data</label>
                <label class="form-control" id="Data">@CVModel.CV.WorkExperience[j].Data![y].Value</label>
                @if (CVModel.CV.WorkExperience[j].Data![y].IsLink)
                {
                <label >  link</label>
                    <label class="form-control" id="Data">@CVModel.CV.WorkExperience[j].Data![y].Link</label>
                    <ValidationMessage For="@(()=> CVModel.CV.WorkExperience[j].Data![y].Link)" />
                }
            </div>
        }                                  
     }                         
     <hr />
    }
 }
<br />