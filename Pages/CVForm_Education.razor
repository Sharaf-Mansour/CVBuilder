                                       <!-- Section Add New Education  -->
@if (CVModel.CV.Educations is not null)
{  
             <br /> 
             <h4>Your Education</h4>
             <button type="button" class="btn btn-outline-primary"  @onclick="()=>CVModel.CV.Educations.Create()">Add Education</button><br /><br />
            @for (int i = 0; i < CVModel.CV.Educations!.Count; i++)
                    {  
                     <br />
                     var j = i;
                        @if (!CRUD.IsInEditState )
                        {
                            @if(!CVModel.CV.Educations[j].InEditState )
                            {
                                <div style="float: left">
                                <button type="button" style="display: block" class="arrow up" @onclick="()=>CVModel.CV.Educations.MoveUp(j) "></button>
                                <button type="button" class="arrow down" @onclick="()=>CVModel.CV.Educations.MoveDown(j) "></button> <br />
                                </div>
                                <div style="margin-left: 55px">
                                <button type="button" class="btn btn-outline-secondary"  @onclick="()=>CVModel.CV.Educations.StartEdit(j) ">Edit </button><br />
                                </div>                              
                            }
                        }        
                        @if( CVModel.CV.Educations[j].InEditState )
                        {
                            <button type="button" class="btn btn-outline-dark" @onclick="()=>CVModel.CV.Educations.Cancel()">Cancel</button>
                            <button type="submit" class="btn btn-outline-success" @onclick="()=>CVModel.CV.Educations.Save()">Save</button>
                            <button type="button" class="btn btn-outline-danger" @onclick="()=>CVModel.CV.Educations.Delete()">Delete</button> 
                            <div class="labeldata">
                                <label>School Name</label>
                                <InputText maxlength = "40" class="form-control" id="LocationName"  @bind-Value="CVModel.CV.Educations![j].LocationName"/>
                                <ValidationMessage For="@(()=> CVModel.CV.Educations![j].LocationName)" />
                            </div> 
                            <div class="labeldata">
                                <label>Year</label>
                                <InputText maxlength = "30" class="form-control" id="Year" @bind-Value="CVModel.CV.Educations![j].Year"/>
                                <ValidationMessage For="@(()=> CVModel.CV.Educations![j].Year)" />
                            </div>
                         }
                         else
                         {
                            <div class="labeldata">
                                <label >School Name</label>
                                <label class="form-control" id="LocationName">@CVModel.CV.Educations![j].LocationName</label>
                                <ValidationMessage For="@(()=> CVModel.CV.Educations![j].LocationName)" />
                            </div> 
                            <div class="labeldata">
                                <label>Year</label>
                                <label class="form-control" id="LocationName">@CVModel.CV.Educations![j].Year</label>
                                <ValidationMessage For="@(()=> CVModel.CV.Educations![j].Year)" />
                            </div>    
                         }
                <!-- Section Add New Data Education  -->  
                <br />
                <button type="button" class="btn btn-outline-primary" @onclick='()=>CVModel.CV.Educations[j].Data.Create()'>Education Data</button><br />
                @for (int x = 0; x < CVModel.CV.Educations[j].Data!.Count; x++)
                {         
                    <br />                              
                    var y = x; 
                @if (!CRUD.IsInEditState)
                {
                    @if(!CVModel.CV.Educations[j].Data![y].InEditState)
                    {    
                    <div style="float: left">
                        <button type="button"  style="display: block" class="arrow up" @onclick="()=>CVModel.CV.Educations[j].Data.MoveUp(y) "></button>
                        <button type="button" class="arrow down" @onclick="()=>CVModel.CV.Educations[j].Data.MoveDown(y) "> </button>
                    </div>
                    <div style="margin-left: 55px">
                        <button type="button" class="btn btn-outline-secondary" @onclick="()=>CVModel.CV.Educations[j].Data.StartEdit(y) ">Edit </button>
                    </div>
                    }         
                }                          
                @if (CVModel.CV.Educations![j].Data![y].InEditState)
                {
                <button type="button" class="btn btn-outline-dark" @onclick="()=>CVModel.CV.Educations[j].Data.Cancel()">Cancel</button>
                <button type="submit" class="btn btn-outline-success" @onclick="()=>CVModel.CV.Educations[j].Data.Save()">Save</button>
                <button type="button" class="btn btn-outline-danger" @onclick="()=>CVModel.CV.Educations[j].Data.Delete()">Delete</button>   
                <div class="labeldata">
                    <label>Data</label>
                    <InputText class="form-control" id="Data" @bind-Value="CVModel.CV.Educations[j].Data![y].Value" maxlength="100" />
                   <ValidationMessage For="@(()=> CVModel.CV.Educations[j].Data![y].Value)" />

                    <label for='@($"Link-{y}")' class="form-check-label" > Set as link</label>
                    <InputCheckbox class="form-check-input"  id='@($"Link-{y}")' @bind-Value="CVModel.CV.Educations[j].Data![y].IsLink"/>
                    @if (CVModel.CV.Educations[j].Data![y].IsLink)
                        {
                        <br/>
                        <label for='@($"Data-{y}")'>Link</label>
                        <InputText class="form-control" id='@($"Data-{y}")' @bind-Value="CVModel.CV.Educations[j].Data![y].Link"/>
                        <ValidationMessage For="@(()=> CVModel.CV.Educations[j].Data![y].Link)" />
                        }
                </div>
                }
                else
                {
                <div class="labeldata">
                    <label>Data</label>
                    <label class="form-control" id="Data">@CVModel.CV.Educations[j].Data![y].Value</label>
                    <ValidationMessage For="@(()=> CVModel.CV.Educations[j].Data![y].Value)" />
                    @if (CVModel.CV.Educations[j].Data![y].IsLink)
                    {
                    <label >  link</label>
                    <label class="form-control" id="Data">@CVModel.CV.Educations[j].Data![y].Link</label>
                    <ValidationMessage For="@(()=> CVModel.CV.Educations[j].Data![y].Link)" />
                    }
                </div>
                }                                 
            }
         <hr />
        }
}         
    <br />