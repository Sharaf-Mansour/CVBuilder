@page "/Form"
@page "/"
<div class="container CV_container">
<div class="row">
   <EditForm Model="@CVModel.CV" OnValidSubmit="Move">
   <ObjectGraphDataAnnotationsValidator  />
    @if (UiUpdate.SelectedTab is Tabs.Personal)
        {
            <CVForm_Personal/>     
        } 
    @if (UiUpdate.SelectedTab is Tabs.Education)
        {    
            <CVForm_Education />
        }
    @if (UiUpdate.SelectedTab is Tabs.WorkExprince)
        {
            <CVForm_WorkExperience />
        }
    @if (UiUpdate.SelectedTab is Tabs.OtherWorkExprince)
        {
            <CVForm_OtherWorkExperience />           
        }
    @if (UiUpdate.SelectedTab is Tabs.Certifications)
        {
            <CVForm_Certification />
        }
    @if (UiUpdate.SelectedTab is Tabs.ProfessionalAffeilations)
        {
            <CVForm_Professional_Affeilations />
        }
    @if (UiUpdate.SelectedTab is Tabs.Refernces)
        {
            <CVForm_Reference />
        }
    @if (UiUpdate.SelectedTab is Tabs.CV)
        {
            <Index />
        }
           <br/>
 @if (UiUpdate.SelectedTab is not Tabs.Personal){
            <button @onclick="()=> goNext = false" type="submit" class="btn btn-info" >Back</button>
        }
 @if (UiUpdate.SelectedTab is not Tabs.CV)
 {
 <button @onclick="()=> goNext = true" type="submit"  class="btn btn-info" >Next</button>
 }

</EditForm></div>  </div>
@code {
    protected override void OnInitialized() =>  UiUpdate.OnChange += StateHasChanged;
    int SelectedTab = 0;
    void Next()=>UiUpdate.SelectedTab = (Tabs)(++SelectedTab);
    void Back()=>UiUpdate.SelectedTab = (Tabs)(--SelectedTab);
    bool goNext;
    void Move( )
    {
        if (CRUD.IsInEditState) return;
        if (goNext)
        {
            Next();
        }
        else
        {
            Back();
        }
        UiUpdate.NotifyStateChanged();
    }
}