@page "/"
@inject IToastService toastService
<div class="container">
    <div class="row">
        <BlazoredToasts Position="ToastPosition.BottomCenter" ShowProgressBar="true" />
        <EditForm EditContext="editContext" OnValidSubmit="Move" OnInvalidSubmit="InValid">
            <FluentValidationValidator />
            @if (CVModel.CV.ListOfTabs.Any(x => x.Tab == UiUpdate.SelectedTab && x.IsSelected))
            {
                @if (UiUpdate.SelectedTab is not Tabs.HomePage)
                {
                    <div class="noprint">
                        <br />
                        <br />
                        <br />
                        <br />
                        <br />
                        <NavMenu />
                    </div>
                }
                @if (UiUpdate.SelectedTab is Tabs.HomePage)
                {
                    <CVForm_HomePage />
                }
                @if (UiUpdate.SelectedTab is Tabs.Personal)
                {
                    <CVForm_Personal />
                }
                @if (UiUpdate.SelectedTab is Tabs.Education)
                {
                    <CVForm_Education />
                }
                @if (UiUpdate.SelectedTab is Tabs.WorkExperience)
                {
                    <CVForm_WorkExperience />
                }
                @if (UiUpdate.SelectedTab is Tabs.OtherWorkExperience)
                {
                    <CVForm_OtherWorkExperience />
                }
                @if (UiUpdate.SelectedTab is Tabs.Certifications)
                {
                    <CVForm_Certification />
                }
                @if (UiUpdate.SelectedTab is Tabs.ProfessionalAffiliations)
                {
                    <CVForm_Professional_Affeilations />
                }
                @if (UiUpdate.SelectedTab is Tabs.Skills)
                {
                    <CVForm_Skills />
                }
                @if (UiUpdate.SelectedTab is Tabs.Projects)
                {
                    <CVForm_Projects />
                }
                @if (UiUpdate.SelectedTab is Tabs.Refernces)
                {
                    <CVForm_Reference />
                }
                @if (UiUpdate.SelectedTab is Tabs.CV)
                {
                    <CVDownloader />
                }
                <br />
                @if (UiUpdate.SelectedTab is not Tabs.HomePage and not Tabs.Personal)
                {
                    <button @onclick="()=> goNext = false" type="submit" class="btn btn-outline-info">&lt; Back</button>
                }
                @if (UiUpdate.SelectedTab is Tabs.Personal)
                {
                    <button @onclick="()=> {goNext = false; Move();}" type="button" class="btn btn-outline-info">&lt; Back</button>
                }
                @if (UiUpdate.SelectedTab is not Tabs.CV and not Tabs.HomePage)
                {
                    <button @onclick="()=> goNext = true" type="submit" style="margin: 9px" class="btn btn-outline-info">Next &gt;</button>
                    <CVPreview>
                        <Index />
                    </CVPreview>
                }
                @if (UiUpdate.SelectedTab is Tabs.HomePage)
                {
                    <button @onclick="()=> {goNext = true; Move();}" type="button" style="margin: 9px" class="btn btn-outline-info">Lets Go!</button>
                }
            }
        </EditForm>
    </div>
</div>
@code {
    public static EditContext? editContext = new(CVModel.CV);
    ToastParameters? _toastParameters;
    bool? goNext = false;
    protected override void OnInitialized()
    {
        UiUpdate.OnChange += StateHasChanged;
        editContext = new(CVModel.CV);
        editContext?.SetFieldCssClassProvider(new CustomFieldClassProvider());
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _toastParameters = new();
            _toastParameters.Add(nameof(RegulationsToast.Title), @"Welcome to CV Builder 2.0");
            _toastParameters.Add(nameof(RegulationsToast.ToastParam), @"All your data is stored on your device and will be cleared if you close or restart the application, You can install the application on your device for full offline support");
            toastService.ShowToast<RegulationsToast>(_toastParameters, new ToastInstanceSettings(10, true));
        }
    }
    void Next() => UiUpdate.SelectedTab = CVModel.CV.ListOfTabs.Where(x => x.IsSelected).ToList()[++UiUpdate.SelectedTabIndex].Tab;
    void Back() => UiUpdate.SelectedTab = CVModel.CV.ListOfTabs.Where(x => x.IsSelected).ToList()[--UiUpdate.SelectedTabIndex].Tab;
    void InValid()
    {
        if (UiUpdate.SelectedTab is not Tabs.HomePage)
            toastService.ShowWarning("Please Enter Valid Date");
    }
    void Move()
    {
        if (CRUD.IsInEditState)
        {
            toastService.ShowInfo("Please Save");
            return;
        }
        if (goNext ?? false) Next();
        else if (!goNext ?? false) Back();
        goNext = null;
        UiUpdate.NotifyStateChanged();
        editContext?.Validate();
    }
}