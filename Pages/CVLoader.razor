@inject IJSRuntime JSRuntime
 <div class="mb-3 noprint">
  <InputFile class="noprint form-control" type="file" id="formFile" OnChange="@LoadFiles" />
</div>
 @if(ErrorMsg is not null){
<div  class="alert alert-danger" role="alert">
@ErrorMsg
</div>
}
<Index/>
<div class="modal-footer ">
	<button @onclick="DownloadFile" class="btn  btn-outline-primary fs-5">Download</button>
 	<button @onclick="Print" class="btn btn-outline-primary fs-5">Print</button>
</div>
@code{
	IJSInProcessRuntime JsInProcess => (IJSInProcessRuntime)JSRuntime;
    void Print() => JsInProcess.InvokeVoid("window.printwindow", null);
	string Json() => JsonSerializer.Serialize(CVModel.CV);	
	async Task DownloadFile() => await JSRuntime.InvokeAsync<object>("saveFile", Json(), "CV"); 
	IBrowserFile? File;
	string? json {get;set; }
	string? ErrorMsg {get;set; }
	async Task  LoadFiles(InputFileChangeEventArgs e)
	{
		File = e.GetMultipleFiles().FirstOrDefault();
		using var memoryStream = new MemoryStream();
		if (File is not null)
			await File.OpenReadStream().CopyToAsync(memoryStream);
		json = System.Text.Encoding.Default.GetString(memoryStream.ToArray());
		try
		{
			CVModel.CV  = JsonSerializer.Deserialize<CV>(json ?? " ") ?? new();
		}
		catch
		{
			ErrorMsg = "Please select correct JSON File";
			return;
		}
		UiUpdate.NotifyStateChanged();
	}
 }